name: Release
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v2.1.3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          settings-path: /tmp

      - name: Setup Maven settings.xml
        uses: s4u/maven-settings-action@v2.3.0
        with:
          override: true
          servers: '[{"id": "ossrh", "username": "${{ secrets.SONATYPE_USERNAME }}", "password": "${{ secrets.SONATYPE_PASSWORD }}"}]'
          properties: '[{"gpg.executable": "gpg"}, {"gpg.passphrase": "${{ secrets.GPG_PASSWORD }}"}]'

      - name: Setup gpg keyring
        env:
          GPG_FILE: ${{ secrets.GPG_FILE }}
        run: mkdir ~/.gnupg && echo "$GPG_FILE" | base64 -d > ~/.gnupg/secring.gpg

      - name: Set the current release version
        id: release_version
        run: echo ::set-output name=release_version::${GITHUB_REF:11}

      - name: Setup git
        env:
          MICRONAUT_BUILD_EMAIL: ${{ secrets.MICRONAUT_BUILD_EMAIL }}
        run: |
          git config --global user.email "$MICRONAUT_BUILD_EMAIL"
          git config --global user.name "micronaut-build"
          git fetch
          git checkout master
          git tag -d v${{ steps.release_version.outputs.release_version }}
          git push origin :refs/tags/v${{ steps.release_version.outputs.release_version }}

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Figure out next version
        id: next_version
        run: |
          wget -q https://raw.githubusercontent.com/micronaut-projects/github-actions/master/post-release/increment_version.sh -O /tmp/iv.sh
          chmod +x /tmp/iv.sh
          NV=`/tmp/iv.sh -p ${{ steps.release_version.outputs.release_version }}`
          echo ::set-output name=next_version::${NV}-SNAPSHOT

      - name: Prepare release
        run: mvn --batch-mode release:prepare -DreleaseVersion=${{ steps.release_version.outputs.release_version }} -Dtag=v${{ steps.release_version.outputs.release_version }} -DdevelopmentVersion=${{ steps.next_version.outputs.next_version }}

      - name: Publish to Github Pages
        uses: micronaut-projects/github-pages-deploy-action@master
        env:
          BETA: ${{ contains(steps.release_version.outputs.release_version, 'M') || contains(steps.release_version.outputs.release_version, 'RC') }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BASE_BRANCH: master
          BRANCH: gh-pages
          FOLDER: target/site
          VERSION: ${{ steps.release_version.outputs.release_version }}

      - name: Perform release
        env:
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
        run: mvn --batch-mode release:perform

      - name: Close release
        if: success()
        run: |
          release_url=`cat $GITHUB_EVENT_PATH | jq '.release.url' | sed -e 's/^"\(.*\)"$/\1/g'`
          echo $release_url
          curl -s --request PATCH -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/json" $release_url --data "{\"draft\": false}"

      - name: Checkout micronaut-core
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: micronaut-projects/micronaut-core
          ref: 2.2.x
          path: micronaut-core # Must be micronaut-core
        continue-on-error: true

      - name: Update BOM
        uses: micronaut-projects/github-actions/update-bom@master
        continue-on-error: true
        with:
          token: ${{ secrets.GH_TOKEN }}
        env:
          MICRONAUT_BUILD_EMAIL: ${{ secrets.MICRONAUT_BUILD_EMAIL }}
          githubCoreBranch: 2.2.x
          projectVersion: ${{ steps.release_version.outputs.release_version }}
          bomProperty: micronautMavenPluginVersion

      - name: Rollback release
        if: failure()
        run: mvn release:rollback
